name: Build and Push Docker Image
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to OCI Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.OCI_REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.OCI_REGISTRY }}/website:latest,${{ secrets.OCI_REGISTRY }}/website:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.OCI_REGISTRY }}/website:buildcache
          cache-to: type=registry,ref=${{ secrets.OCI_REGISTRY }}/website:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ secrets.DEPLOY_SERVER }} >> ~/.ssh/known_hosts

      - name: Create remote directory
        run: ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }} "mkdir -p /srv/website"

      - name: Copy docker-compose files
        run: |
          scp docker-compose.yml ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }}:/srv/website/
          scp docker-compose.prod.yml ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }}:/srv/website/

      - name: Deploy with docker-compose
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }} "cd /srv/website && docker compose -f docker-compose.yml -f docker-compose.prod.yml pull"
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }} "cd /srv/website && docker compose -f docker-compose.yml -f docker-compose.prod.yml down"
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_SERVER }} "cd /srv/website && docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d"
